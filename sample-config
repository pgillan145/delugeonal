# Copy this file to /etc/delugeonal.conf, $HOME/.config/delusional/delugeonal.conf, $HOME/delugeonal.conf
# - OR -
# Copy this file to /wherever/i/keep/config/files.conf, and set $DELUGEONAL_CONF.

[default]

# Files and directories
# ---------------------
# Store persistent data in this file
cache_file = /tmp/delugeonal.cache
# The main directory from whence things come and go
download_dir = /my/home/Downloads
# The directory torrents live in before they are added to the torrentclient.  Used to determine how much space needs to
#   be freed up before new torrents are added in the event of the disk being at or near capacity.
torrent_dir = /my/home/Torrents

media_dirs = [ '/Volumes/Media', '/Volumes/Overflow' ]
# The name of the media_dir subdirectory that contains Movies
movie_dir = Movies
# The name of the media_dir subdirectory that contains TV Shows
tv_dir = TV Shows
# Store the process id of the current running process in this file to prevent multiple instances from running simultanesously
pidfile = /tmp/delugeonal.pid
# Keep a record of what we started with vs. what we ended up with, for dev and troubleshooting purposes
#match_debug_log = /tmp/delugeonal_match.log

# Uncomment to use the output from `quota` rather than the actual space on disk. Useful for seedboxes.
#use_quota = True

# Downloads
# ---------
# Only download files matching this codec
codec = H.265
# Only download files matching this resolution
resolution = 1080p
# When torrent file names need an addjustment before they can be used, apply these transformations.  Multiple 
#   tranformations can be defined per show.  All comma separated criteria must match before each comma separated
#   action is applied.
#   The key is the "official" name that comes back from the media database (i.e. IMDb or TheTVDB), including the year.
#
#   citeria options:
#        'episode|season'==`value`
#           perform the action if episode or season is equal to `value`  
#        'episode|season'>`value`
#           perform the action if episode or season is greater than `value`  
#        'episode|season'<`value`
#           perform the action if episode or season is less than `value`  
#   available actions: 
#       'episode|season'+`value`
#           add `value` to the episode or season
#       'episode|season'-`value`
#           subtract `value` from the episode or season
#       'title|episode|season'=`value`
#           set the title, season or episode to `value`
transforms = { 'American Dad! (2005)': [ {'criteria':'season>11', 'action':'season+1' } ],
               'Robot Chicken (2005)': [ {'criteria':'season==11', 'action':'episode+1' } ],
               'Rick and Morty (2013)': [ {'criteria':'season==5,episode==0', 'action':'season=0,episode=180' } ],
               'Scenes from a Marriage (US) (2021)': [ {'criteria':'season>0', 'action':'title=Scenes from a Marriage (2021)' } ]}

# Use these codec/resolutions for downloads that match these names.
download_overrides = { 'Family Guy': { 'resolution': '720p', 'codec': 'H.265' },
                       'Moon Knight': { 'resolution': '1080p', 'codec': 'H.264' },
                       'Picard': { 'resolution': '1080p', 'codec': 'H.264' },
                       'Halo': { 'resolution': '1080p', 'codec': 'H.264' },
                       'Kenobi': { 'resolution': '1080p', 'codec': 'H.264' },
                       'Last Week Tonight': { 'resolution': '720p', 'codec': 'H.265' },
                     }


# Libraries
# ---------
# Python objects to use for access to various services. See FUTURE DOCUMENTATION for more information.
mediadblibs = [ '.mediadbs.thetvdb', '.mediadbs.imdb' ]
mediaserverlib = .mediaservers.plex
torrentclientlib = .torrentclients.deluge

# Torrent Client Maintenance settings
# -----------------------------------
[cleanup]
# NOTE:  Torrents with a tracker listed in 'ratio' or 'seedtime' are considered "private."  Anything else is considered "public."
# Minimum required torrent ratio for items from a given tracker.
ratio = { "specific.tracker":2.0, "default":1.0 }
# Minimum length of time to keep torrents from the specified trackers, in days.
seedtime = { "specific.tracker":15, "default":1 }
# In cases where space is needed, remove files that have met the time requirement but have ratios below this value first.
min_keep_ratio = .01
# If this value is True, cleanup won't happen for files that still live in the "default" directory they were added to when the download completed.
wait_for_file_move = True
# Delete as many active torrents as necessary to maintain at least this much free space, in percent
free_percent = 5
# Skip any torrents whose names match any of the regular expressions in this array.
ignore = [ 'Marvel', '\.iso$' ]
# Which on which to check for space
storage_location = /

# Media Servers
[plex]
url = http://127.0.0.1:32400
# The login token requred to access the plex API.
# See https://support.plex.tv/articles/204059436-finding-an-authentication-token-x-plex-token/
token = XXXXXX

# Media Sites

# Only defined sites will be considered 'active' for purposes of downloading.
[ipt]
# IPTorrents
# URL to monitor for automatic RSS downloads
rss_url = "https://iptorrents.com/t.rss?u=XXXXXX;tp=XXXXX;22;99;download;subscriptions"

# Torrent Clients
[deluge]
# Deluge 1.3.15
# Full path of the deluge-console script
deluge_console = "/Applications/Deluge.app/Contents/MacOS/deluge-console"

#[transmission]
# These values are only necessary if transmission rpc is configured on a different port or requires login credentials.
# host = localhost
# port = 9091
# user = username
# password = password
#
# Location of the transmission settings file.
# settings = /etc/transmission-daemon/settings.json
#
# Location of the transmission-remote binary
# transmission-remote = /usr/bin/transmission-remote
